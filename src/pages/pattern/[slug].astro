import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import Markdown from "../../components/Markdown.astro";
import type { Pattern } from "../../types/pattern";
import { z } from "zod";

const PatternSchema = z.object({
  id: z.string(),
  title: z.string(),
});
const { slug } = Astro.params;
const patterns = await getCollection("patterns");
const pattern = patterns.find((p) => p.slug === slug);
if (!pattern) {
  throw new Error(`Pattern not found: ${slug}`);
}
const parsed = PatternSchema.safeParse(pattern.data);
if (!parsed.success) {
  throw new Error(`Invalid pattern frontmatter: ${parsed.error.message}`);
}
const { title, description, category, tags, updated } = parsed.data;
const content = pattern.body as string;
const patternData: Pattern = {
  slug,
  title,
  description,
  category,
  tags,
  updated: updated ? new Date(updated) : undefined,
  content,
};
---

<BaseLayout>
  <article class="prose prose-slate dark:prose-invert max-w-none">
    <header class="mb-8">
      <h1 class="text-4xl font-semibold mb-2">{patternData.title}</h1>
      <p class="text-lg text-slate-700 dark:text-slate-300">{patternData.description}</p>
      <div class="mt-4 flex flex-wrap gap-2">
        <span
          class="inline-block rounded-full bg-sky-100 text-sky-800 px-3 py-1 text-sm font-medium"
          >{patternData.category}</span
        >
        {patternData.tags.map((tag) => (
          <span
            class="inline-block rounded-full bg-slate-200 dark:bg-slate-800 text-slate-800 dark:text-slate-200 px-3 py-1 text-sm font-medium"
            >{tag}</span
          >
        ))}
      </div>
      {patternData.updated && (
        <p class="mt-2 text-sm text-slate-500 dark:text-slate-400">
          Last updated: {patternData.updated.toLocaleDateString("en-US", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })}
        </p>
      )}
    </header>
    <Markdown content={patternData.content} />
  </article>
</BaseLayout> 
