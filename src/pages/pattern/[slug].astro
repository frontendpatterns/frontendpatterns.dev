---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { render } from "astro:content";
import EmailSignup from "../../components/EmailSignup.astro";

const { slug } = Astro.params;

export async function getStaticPaths() {
  const posts = await getCollection("patterns", ({ data }) => {
    return data.draft !== true;
  });
  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);

const addedDate =
  post.data.added instanceof Date
    ? post.data.added
    : new Date(post.data.added ?? Date.now());

const structuredData = JSON.stringify({
  "@context": "https://schema.org",
  "@type": "TechArticle",
  headline: `${post.data.title} Pattern`,
  description:
    post.data.metaDescription ??
    "Frontend architecture pattern from frontendpatterns.dev.",
  author: {
    "@type": "Person",
    name: "Den Odell",
  },
  datePublished: addedDate.toISOString(),
  programmingLanguage: ["JavaScript", "TypeScript"],
});
---

<BaseLayout title={post.data.title} metaDescription={post.data.metaDescription}>
  <script is:inline type="application/ld+json" set:html={structuredData} />

  <header
    class="space-y-2 border-b border-slate-200 pb-8 pt-8 dark:border-slate-800"
  >
    <div class="flex flex-wrap items-center text-sm text-slate-500">
      <span
        class="inline-flex items-center rounded-full border border-slate-200 px-3 py-1 dark:border-slate-700 dark:text-slate-300"
      >
        Pattern #{post.data.id.toString().padStart(3, "0")}
      </span>
    </div>

    <h1
      class="text-6xl font-bold tracking-tight text-slate-900 dark:text-slate-100 pb-10"
    >
      {post.data.title}
    </h1>

    <p
      class="text-sm font-semibold uppercase tracking-[0.2em] text-slate-500 dark:text-slate-400 pb-5"
    >
      <a href={`/patterns/${post.data.category?.toLocaleLowerCase()}`}
        >{post.data.category} Pattern</a
      >
    </p>

    {
      post.data.difficulty && (
        <p class="inline-flex items-center text-sm text-slate-600 dark:border-slate-700 dark:text-slate-300">
          {post.data.difficulty}
        </p>
      )
    }

    <p class="text-xs text-slate-500 dark:text-slate-400">
      Added: {
        new Date(post.data.added).toLocaleDateString("en-GB", {
          year: "numeric",
          month: "long",
          day: "numeric",
        })
      }
    </p>
  </header>

  <article
    class="prose prose-slate max-w-none pt-8 dark:prose-invert prose-h1:hidden prose-headings:font-semibold prose-headings:text-slate-900 dark:prose-headings:text-slate-100 prose-a:text-sky-700 hover:prose-a:text-sky-800 dark:prose-a:text-sky-300 dark:hover:prose-a:text-sky-200"
  >
    <Content />
  </article>

  <EmailSignup />
</BaseLayout>
