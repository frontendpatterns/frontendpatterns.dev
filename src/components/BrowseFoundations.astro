---
import { getCollection } from "astro:content";
import GuideIllustration from "./GuideIllustration.astro";

const foundations = (
	await getCollection("foundations", ({ data }) => {
		return data.draft !== true;
	})
).sort((a, b) => {
	const dateA = a.data.publishDate
		? new Date(a.data.publishDate)
		: new Date(0);
	const dateB = b.data.publishDate
		? new Date(b.data.publishDate)
		: new Date(0);
	return dateB - dateA;
});
---

<ul class="grid gap-4 md:gap-6">
	{
		foundations.map((foundation) => {
			const publishedDate = foundation.data.publishDate
				? new Date(foundation.data.publishDate)
				: null;
			const isNew =
				publishedDate &&
				new Date().getTime() - publishedDate.getTime() <
					30 * 24 * 60 * 60 * 1000;

			return (
				<li>
					<a href={`/foundations/${foundation.id}`} class="block h-full">
						<article class="group flex h-full flex-col gap-4 rounded-2xl border border-slate-200 bg-white p-5 shadow-sm transition hover:-translate-y-1 hover:shadow-lg dark:border-slate-800 dark:bg-slate-900 md:flex-row md:items-stretch md:gap-6">
							<div class="flex shrink-0 items-start">
								<GuideIllustration
									slug={foundation.id}
									title={foundation.data.title}
								/>
							</div>
							<div class="flex flex-1 flex-col gap-3">
								<div class="flex flex-wrap items-center gap-2 text-xs uppercase tracking-wide text-slate-500 dark:text-slate-400">
									{foundation.data.tags && foundation.data.tags.length > 0 ? (
										<span class="transition group-hover:text-sky-700 dark:group-hover:text-sky-300">
											{foundation.data.tags[0]}
										</span>
									) : (
										<span>Foundation</span>
									)}
									{publishedDate ? (
										<time class="sr-only" dateTime={publishedDate.toISOString()}>
											Published on{" "}
											{publishedDate.toLocaleDateString("en-GB", {
												year: "numeric",
												month: "short",
												day: "numeric",
											})}
										</time>
									) : null}
									{isNew ? (
										<span class="ml-1 inline-flex items-center rounded-full bg-sky-100 px-2 py-0.5 text-[10px] font-semibold text-sky-800 dark:bg-sky-800/20 dark:text-sky-200">
											NEW
										</span>
									) : null}
								</div>
								<h3 class="text-lg font-semibold text-slate-900 transition-colors group-hover:text-sky-700 dark:text-slate-100 dark:group-hover:text-sky-300">
									{foundation.data.title}
								</h3>
								{foundation.data.description ? (
									<p class="text-sm leading-relaxed text-slate-600 dark:text-slate-300">
										{foundation.data.description}
									</p>
								) : null}
								{foundation.data.readingTime ? (
									<div class="text-xs text-slate-500 dark:text-slate-400">
										{foundation.data.readingTime}
									</div>
								) : null}
								<div class="mt-auto flex items-center gap-2 text-sm font-medium text-sky-700 transition group-hover:text-sky-800 dark:text-sky-300 dark:group-hover:text-sky-200">
									Read article
									<svg
										class="h-4 w-4 transition-transform group-hover:translate-x-1"
										viewBox="0 0 20 20"
										fill="currentColor"
										aria-hidden="true"
									>
										<path
											fill-rule="evenodd"
											d="M10.293 3.293a1 1 0 0 1 1.414 0l5 5a1 1 0 0 1 0 1.414l-5 5a1 1 0 1 1-1.414-1.414L13.586 10H4a1 1 0 1 1 0-2h9.586l-3.293-3.293a1 1 0 0 1 0-1.414z"
											clip-rule="evenodd"
										/>
									</svg>
								</div>
							</div>
						</article>
					</a>
				</li>
			);
		})
	}
</ul>
